package controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.CommentVO;
import service.CommentService;
import service.CommentServiceImpl;

@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
    
	//댓글은 비동기 방식이기 때문에 목적지 주소가 없음
	//비동기는 데이터를 요청한 곳으로 바로 결과를 보내주는 방식
	//RequestDispatcher / destPage 가 필요 없음
	//contentType 도 필요가 없음
	
	private CommentService csv;
	private int isOk;
	
	public CommentController() {
        csv = new CommentServiceImpl();
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(path);
		
		switch (path) {
		case "post":
			try {
				log.info("post case check 1");
				//js에서 보낸 데이터를 읽어들이는 작업
				//js('Object') >> controller(String)
				//'{...}'
				
				StringBuffer sb = new StringBuffer();
				String line ="";
				BufferedReader br = request.getReader(); //댓글객체가 들어있음
				while((line = br.readLine()) != null) {
					sb.append(line);
				}
				log.info(">>> sb >>> {}", sb.toString());
				//위의 값을 객체로 생성
				JSONParser parser = new JSONParser();
				JSONObject jsonObj = (JSONObject)parser.parse(sb.toString()); //key:value 형태로 return
				log.info(">>> jsonObj >>> {}", jsonObj.toString());
				
				//key를 이용하여 value를 추출
				int bno = Integer.parseInt(jsonObj.get("bno").toString());
				String writer = jsonObj.get("writer").toString();
				String content = jsonObj.get("content").toString();
				
				CommentVO cvo = new CommentVO(bno, writer, content);
				log.info(">>> cvo >>> {}", cvo);
				int isOk = csv.post(cvo);
				log.info("isOk >>> {}",(isOk>0)?"OK":"Faul");
				
				// 결과 데이터 전송 => 화면으로 전송(response 객체 body에 기록)
				PrintWriter out = response.getWriter();
				out.print(isOk); //js >> result로 전송 됫 
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
			
		case "list" :
			int bno = Integer.parseInt(request.getParameter("bno"));
			log.info(">>> parmaeter bno >>"+bno);
			break;
		}
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		service(request, response);
	}

}
